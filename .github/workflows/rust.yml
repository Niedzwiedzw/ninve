name: Build and Publish Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        target:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, artifact: ninve-linux-x86_64.tar.gz }
          - { os: ubuntu-latest, target: x86_64-pc-windows-gnu, artifact: ninve-windows-x86_64.zip }
          - { os: macos-latest, target: x86_64-apple-darwin, artifact: ninve-macos-x86_64.tar.gz }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: crates/ninve-cli

      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64

      - name: Build for target
        run: |
          cargo build --release --target ${{ matrix.target.target }}
        env:
          CARGO_INCREMENTAL: 0

      - name: Create release artifact
        run: |
          if [[ "${{ matrix.target.target }}" == "x86_64-pc-windows-gnu" ]]; then
            zip -j ${{ matrix.target.artifact }} target/${{ matrix.target.target }}/release/ninve.exe
          else
            tar -czvf ${{ matrix.target.artifact }} -C target/${{ matrix.target.target }}/release ninve
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.artifact }}
          path: ${{ matrix.target.artifact }}

  publish-release:
    runs-on: ubuntu-latest
    needs: build-and-release
    if: always()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare artifacts for release
        run: |
          mv artifacts/ninve-linux-x86_64.tar.gz/ninve-linux-x86_64.tar.gz . || true
          mv artifacts/ninve-macos-x86_64.tar.gz/ninve-macos-x86_64.tar.gz . || true
          mv artifacts/ninve-windows-x86_64.zip/ninve-windows-x86_64.zip . || true

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ninve-linux-x86_64.tar.gz
            ninve-macos-x86_64.tar.gz
            ninve-windows-x86_64.zip
          fail-on-unmatched-files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
